{"entries":[{"timestamp":1751122561429,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables><variable id=\"AOSZayt7|#Ui6K5/+?ud\">KeyCard</variable></variables><block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_negate\"><value name=\"BOOL\"><block type=\"variables_get\"><field name=\"VAR\" id=\"AOSZayt7|#Ui6K5/+?ud\">KeyCard</field></block></value></block></value></block></statement></block>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n"],[0,"</xm"]],"start1":12,"start2":12,"length1":527,"length2":113}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n    let KeyCard = 0\n    if (!(KeyCard)) {\n    \t\n    } else {\n    \t\n    }\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":104,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"pxt-mfrc522\": \"github:joy-it/pxt-rfid-mfrc522#1.0.1\",\n        \"pxt-max7219_8x8\": \"github:alankrantas/pxt-max7219_8x8#v0.0.3\",\n        \"Grove\": \"github:seeed-studio/pxt-grove#v0.7.4\""],[0,"\n   "]],"start1":139,"start2":139,"length1":200,"length2":8},{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"blocksprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":223,"start2":223,"length1":68,"length2":44}]},{"type":"added","filename":"main.py","value":"def on_forever():\n    pass\nbasic.forever(on_forever)\n"}]},{"timestamp":1751122956769,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"7.4\""],[-1,",\n        \"Sound Level in decibels (dB)\": \"github:microbit-foundation/pxt-sound-level-db#v0.1.6\""],[0,"\n   "]],"start1":331,"start2":331,"length1":104,"length2":8}]}]},{"timestamp":1751124291969,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"122"],[1,"0"],[0,"\" y=\""],[-1,"29"],[1,"0"],[0,"\"><s"]],"start1":160,"start2":160,"length1":18,"length2":15}]}]},{"timestamp":1751128963222,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ck><"],[-1,"block type=\"MFRC522_Init\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"522\" y=\"51\"></block><"],[0,"/xml"]],"start1":535,"start2":535,"length1":110,"length2":8}]}]},{"timestamp":1751128978889,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ue><"],[-1,"statement name=\"DO0\"><block type=\"MFRC522_Init\"><next><block type=\"MFRC522_write\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">\"Open\"</field></shadow></value></block></next></block></statement><statement name=\"ELSE\"><block type=\"MFRC522_AntennaOff\"></block></statement><"],[0,"/blo"]],"start1":507,"start2":507,"length1":291,"length2":8},{"diffs":[[0,"522_"],[-1,"read"],[1,"Init"],[0,"\" di"]],"start1":555,"start2":555,"length1":12,"length2":12},{"diffs":[[0," x=\""],[-1,"629\" y=\"186\"></block><block type=\"MFRC522_getID\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"575"],[1,"522"],[0,"\" y=\""],[-1,"26"],[0,"5"],[1,"1"],[0,"\"></"]],"start1":616,"start2":616,"length1":123,"length2":18}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"    MFRC522.Init()\n        MFRC522.write(\"\\\"Open\\\"\")\n    } else {\n        MFRC522.AntennaOff()"],[1,"\t\n    } else {\n    \t"],[0,"\n   "]],"start1":70,"start2":70,"length1":102,"length2":28}]}]},{"timestamp":1751129073711,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"0"],[1,"122"],[0,"\" y=\""],[-1,"0"],[1,"29"],[0,"\"><s"]],"start1":160,"start2":160,"length1":15,"length2":18},{"diffs":[[0," x=\""],[-1,"507"],[1,"629"],[0,"\" y=\"1"],[-1,"57"],[1,"86"],[0,"\"></"]],"start1":899,"start2":899,"length1":19,"length2":19},{"diffs":[[0," x=\""],[-1,"453"],[1,"575"],[0,"\" y=\"2"],[-1,"3"],[0,"6"],[1,"5"],[0,"\"></"]],"start1":1003,"start2":1003,"length1":19,"length2":19}]}]},{"timestamp":1751216706301,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"    "],[-1,"KeyCard = 0\n    if not (KeyCard):\n        MFRC522.init()\n        MFRC522.write(\"\\\"Open\\\"\")\n    else:\n        MFRC522.antenna_off()"],[1,"pass"],[0,"\nbas"]],"start1":18,"start2":18,"length1":138,"length2":12}]}]},{"timestamp":1751216712777,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_negate\"><value name=\"BOOL\"><block type=\"variables_get\"><field name=\"VAR\" id=\"AOSZayt7|#Ui6K5/+?ud\">KeyCard</field></block></value></block></value><statement name=\"DO0\"><block type=\"MFRC522_Init\"><next><block type=\"MFRC522_write\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">\"Open\"</field></shadow></value></block></next></block></statement><statement name=\"ELSE\"><block type=\"MFRC522_AntennaOff\"></block></statement></block></statement></block><block type=\"MFRC522_read\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"507\" y=\"157\"></block><block type=\"MFRC522_getID\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"453\" y=\"236\"></block><"],[0,"/xml>"]],"start1":125,"start2":125,"length1":13,"length2":906}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"basic.forever(function () {\n    let KeyCard = 0\n    if (!(KeyCard)) {\n        MFRC522.Init()\n        MFRC522.write(\"\\\"Open\\\"\")\n    } else {\n        MFRC522.AntennaOff()\n    }\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":1,"length2":178}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":538,"start2":538,"length1":52,"length2":8},{"diffs":[[0,"itor\": \""],[-1,"py"],[1,"blocks"],[0,"prj\"\n}\n"]],"start1":558,"start2":558,"length1":17,"length2":21}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"# Home Security System - Micro:bit Controller\nfrom microbit import *\nimport spi\nimport music\n\n# RFID Setup\nclass MFRC522:\n    def __init__(self):\n        self.spi = spi.init(baudrate=1000000, bits=8, mode=0, sclk=pin13, mosi=pin15, miso=pin14)\n        pin2.write_digital(1)  # SDA\n        pin8.write_digital(1)  # RST\n    \n    def read_card(self):\n        # Simplified RFID reading\n        return \"52C31C2F\"  # Example card ID\n\n# LCD I2C Class\nclass LCD_I2C:\n    def __init__(self):\n        i2c.init(freq=400000, sda=pin14, scl=pin13)\n    \n    def clear(self):\n        # Clear LCD command\n        pass\n    \n    def print(self, text, line=0):\n        # Print text to LCD\n        display.scroll(text)  # Fallback to micro:bit display\n\n# Initialize components\nrfid = MFRC522()\nlcd = LCD_I2C()\nservo_pos = 0\npassword = \"00000000\"\nmaster_key = \"A1B2C3D4DD\"\nentered_password = \"\"\nis_unlocked = False\nvalid_card = \"52C31C2F\"\n\n# Keypad matrix\nkeypad_map = {\n    (0,0): 'A', (0,1): '1', (0,2): '2', (0,3): '3',\n    (1,0): 'B', (1,1): '4', (1,2): '5', (1,3): '6',\n    (2,0): 'C', (2,1): '7', (2,2): '8', (2,3): '9',\n    (3,0): 'D', (3,1): 'CLR', (3,2): '0', (3,3): 'ENT'\n}\n\ndef beep():\n    \"\"\"เสียงแจ้งเตือน\"\"\"\n    pin1.write_digital(1)\n    sleep(100)\n    pin1.write_digital(0)\n\ndef servo_control(angle):\n    \"\"\"ควบคุม Servo Motor\"\"\"\n    global servo_pos\n    servo_pos = angle\n    pin0.write_analog(angle * 4)  # Convert to PWM\n\ndef check_rfid():\n    \"\"\"ตรวจสอบ RFID Card\"\"\"\n    card_id = rfid.read_card()\n    if card_id == valid_card:\n        beep()\n        lcd.print(\"Card OK\", 0)\n        return True\n    else:\n        beep()\n        beep()\n        lcd.print(\"Invalid Card\", 0)\n        return False\n\ndef read_keypad():\n    \"\"\"อ่านค่าจาก Keypad\"\"\"\n    # Simplified keypad reading\n    if button_a.was_pressed():\n        return 'A'\n    elif button_b.was_pressed():\n        return 'B'\n    return None\n\ndef check_password(input_pass):\n    \"\"\"ตรวจสอบรหัสผ่าน\"\"\"\n    global password\n    if input_pass == master_key:\n        return \"MASTER\"\n    elif input_pass == password:\n        return \"CORRECT\"\n    else:\n        return \"WRONG\"\n\ndef reset_password():\n    \"\"\"รีเซ็ตรหัสผ่าน\"\"\"\n    global password\n    password = \"00000000\"\n    lcd.print(\"Password Reset\", 0)\n\n# Main Loop\nwhile True:\n    # Check RFID Card\n    if not is_unlocked:\n        card_status = check_rfid()\n        if card_status:\n            is_unlocked = True\n            servo_control(90)  # Unlock door\n            lcd.print(\"Enter Password\", 0)\n    \n    # Read Keypad Input\n    if is_unlocked:\n        key = read_keypad()\n        if key:\n            beep()\n            if key == 'CLR':\n                entered_password = \"\"\n                lcd.print(\"Cleared\", 0)\n            elif key == 'ENT':\n                result = check_password(entered_password)\n                if result == \"MASTER\":\n                    lcd.print(\"Master Mode\", 0)\n                    # Enter new password mode\n                elif result == \"CORRECT\":\n                    lcd.print(\"Access Granted\", 0)\n                    servo_control(180)  # Full unlock\n                else:\n                    lcd.print(\"Wrong Password\", 0)\n                    # Sound alarm\n                    for i in range(10):\n                        beep()\n                        sleep(200)\n                entered_password = \"\"\n            else:\n                entered_password += key\n                lcd.print(\"*\" * len(entered_password), 1)\n    \n    sleep(100)"],[1,"def on_forever():\n    KeyCard = 0\n    if not (KeyCard):\n        MFRC522.init()\n        MFRC522.write(\"\\\"Open\\\"\")\n    else:\n        MFRC522.antenna_off()\nbasic.forever(on_forever)\n"]],"start1":0,"start2":0,"length1":3468,"length2":179}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1751122561428,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"HomeSecurity\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1751128963222,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"AOSZayt7|#Ui6K5/+?ud\">KeyCard</variable></variables><block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_negate\"><value name=\"BOOL\"><block type=\"variables_get\"><field name=\"VAR\" id=\"AOSZayt7|#Ui6K5/+?ud\">KeyCard</field></block></value></block></value></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"def on_forever():\n    pass\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"HomeSecurity\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-mfrc522\": \"github:joy-it/pxt-rfid-mfrc522#1.0.1\",\n        \"pxt-max7219_8x8\": \"github:alankrantas/pxt-max7219_8x8#v0.0.3\",\n        \"Grove\": \"github:seeed-studio/pxt-grove#v0.7.4\",\n        \"Sound Level in decibels (dB)\": \"github:microbit-foundation/pxt-sound-level-db#v0.1.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}},{"timestamp":1751216706301,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"AOSZayt7|#Ui6K5/+?ud\">KeyCard</variable></variables><block type=\"device_forever\" x=\"122\" y=\"29\"><statement name=\"HANDLER\"><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_negate\"><value name=\"BOOL\"><block type=\"variables_get\"><field name=\"VAR\" id=\"AOSZayt7|#Ui6K5/+?ud\">KeyCard</field></block></value></block></value><statement name=\"DO0\"><block type=\"MFRC522_Init\"><next><block type=\"MFRC522_write\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">\"Open\"</field></shadow></value></block></next></block></statement><statement name=\"ELSE\"><block type=\"MFRC522_AntennaOff\"></block></statement></block></statement></block><block type=\"MFRC522_read\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"629\" y=\"186\"></block><block type=\"MFRC522_getID\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"575\" y=\"265\"></block></xml>","main.ts":"","README.md":"","main.py":"def on_forever():\n    pass\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"HomeSecurity\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-mfrc522\": \"github:joy-it/pxt-rfid-mfrc522#1.0.1\",\n        \"pxt-max7219_8x8\": \"github:alankrantas/pxt-max7219_8x8#v0.0.3\",\n        \"Grove\": \"github:seeed-studio/pxt-grove#v0.7.4\",\n        \"Sound Level in decibels (dB)\": \"github:microbit-foundation/pxt-sound-level-db#v0.1.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}}],"shares":[],"lastSaveTime":1751216952183}